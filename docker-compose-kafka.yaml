# broker -1, controller - 1개, publicIP:19092, 9093

services:
  controller:
    image: apache/kafka:3.8.0
    container_name: controller
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller:9093
    networks:
      - kafka-net
  broker:
    image: apache/kafka:3.8.0
    container_name: broker
    ports:
      - 19092:9092
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.166.1.220:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # broker 1개이므로 __consumer_offsets 토픽 1개 생성. default: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 # broker 1개이므로 트랜잭션 로그 1개 생성. default: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 # 최소 ISR 설정. default: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    depends_on:
      - controller
    networks:
      - kafka-net
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - broker
    ports:
      - 8080:8080
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=test_kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=192.166.1.220:19092

networks:
  kafka-net:
    driver: bridge